crystal_doc_search_index_callback({"repository_name":"measure","body":"# Measure\n\nThis shard lets you measure, compare, and convert values in different units of measure.\n\nFor example, you can do things like:\n- Compare a weight in ounces to one in grams\n- Convert a length in miles to one in kilometers\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     measure:\n       github: jgaskins/measure\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n[API reference](https://jgaskins.dev/measure)\n\n### Length\n\nYou measure lengths with `Measure::Length`. You can either instantiate it with the constructor or the shorthand methods on `Number`:\n\n```crystal\nrequire \"measure/length\"\n\n# Both of these expressions are equivalent:\nMeasure::Length.new(50, :miles)\n50.miles\n```\n\nYou can also convert measurements to other units:\n\n```crystal\n50.miles.to(:km)\n# => Measure::Length(@magnitude=80.46719742504969, @unit=Measure::Length::Unit::Kilometer)\n10.miles.to(:feet)\n# => Measure::Length(@magnitude=52800.0, @unit=Measure::Length::Unit::Foot)\n1.foot.to(:cm)\n# => Measure::Length(@magnitude=30.47999902464003, @unit=Measure::Length::Unit::Centimeter)\n6.feet.to(:inches)\n# => Measure::Length(@magnitude=72.0, @unit=Measure::Length::Unit::Inch)\n```\n\nThe full list of length units are available [here](https://jgaskins.dev/measure/Measure/Length/Unit.html).\n\n### Weight\n\nSimilar to `Measure::Length` for length/distance measurements, we measure weights with `Measure::Weight`:\n\n```crystal\nrequire \"measure/weight\"\n\n# Both of these expressions are equivalent:\nMeasure::Weight.new(50, :pounds)\n50.pounds\n```\n\nIt also supports conversions:\n\n```crystal\n50000.grams.to(:pounds)\n# => Measure::Weight(@magnitude=110.231, @unit=Measure::Weight::Unit::Pound)\n50000.grams.to(:kilograms)\n# => Measure::Weight(@magnitude=50.0, @unit=Measure::Weight::Unit::Kilogram)\n50.grams.to(:ounces)\n# => Measure::Weight(@magnitude=1.763696, @unit=Measure::Weight::Unit::Ounce)\n```\n\n## Comparisons with similar projects\n\n`Measure` isn't the only Crystal shard that offers support for various units of\nmeasure. Below is a comparison with the ones I've tried.\n\n### `spider-gazelle/crunits` — `Units`\n\nThis shard is a Crystal port of the [Ruby `unitwise` gem](https://github.com/joshwlewis/unitwise).\nThe Ruby gem is _amazing_, to be clear, and the Crystal shard appears to support\nsimilar levels of flexibility and extensibility.\n\nThe reason I chose not to use it and instead write `Measure` is that `Units`\nhandles measurements as `BigDecimal` for the magnitude and `String` for the unit\nof measure. This has two primary drawbacks.\n\nThe first is that, if you use the wrong unit of measure (misspell it, for example), you can't find out until run time. So if you wrote `\"hours\"` instead of `\"hour\"`, you may not notice until that code is in production. This fits the Ruby perspective well enough, but `Measure` leans on the Crystal type system so you can detect these sorts of bugs much earlier. You can argue that you should see it work before deploying it, but let's be real, we've all screwed this up. We've YOLOed code to prod, written tests that didn't test what we thought we were testing and never saw them fail, etc. We're not perfect. If you haven't, let me know and I'll hire you.\n\nThe second is that using `BigDecimal` and `String` makes `crunits` very malleable (you don't have to patch the shard to add units, for example), but it's also significantly slower. `BigDecimal` allows arbitrary precision, but that precision has a performance cost. If you need this precision, use `crunits`. `String`s for units mean every instantiation, arithmetic operation, conversion, etc all involve string parsing. This adds a lot of overhead. On my machine, the benchmarks look like this:\n\n```\nInstantiation\ncrunits   4.84k (206.70µs) (± 1.50%)  908kB/op  245402.46× slower\nmeasure   1.19G (  0.84ns) (± 1.33%)   0.0B/op            fastest\n\nArithmetic\ncrunits   1.44M (693.46ns) (± 0.58%)  1.93kB/op  359.61× slower\nmeasure 518.57M (  1.93ns) (± 3.71%)    0.0B/op         fastest\n\nConversion\ncrunits  13.28k ( 75.30µs) (± 0.71%)  290kB/op  78776.24× slower\nmeasure   1.05G (  0.96ns) (± 1.42%)   0.0B/op           fastest\n```\n\nFor some of these, the monotonic clock is overcounting how long it takes to run the block for `Measure` because it doesn't have sufficient precision, so the real difference may be significantly larger. But even so, a factor of 360-245k is pretty huge. Relying on primitive 64-bit floats and enums makes `Measure` significantly faster.\n\nChances are, instantiating `Units::Measurement` instances won't be a bottleneck in your application, but it and the heap-memory usage (`Units::Measurement` allocates almost 1MB of heap per instance) are factors to consider.\n\n## Contributing\n\n1. Fork it (<https://github.com/jgaskins/measure/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Jamie Gaskins](https://github.com/jgaskins) - creator and maintainer\n","program":{"html_id":"measure/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"measure","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"measure/Measure","path":"Measure.html","kind":"module","full_name":"Measure","name":"Measure","abstract":false,"locations":[{"filename":"src/length.cr","line_number":3,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L3"},{"filename":"src/measure.cr","line_number":4,"url":"https://github.com/jgaskins/measure/blob/main/src/measure.cr#L4"},{"filename":"src/weight.cr","line_number":1,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L1"}],"repository_name":"measure","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"doc":"TODO: Write documentation for `Measure`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code><a href=\"Measure.html\">Measure</a></code></p>","types":[{"html_id":"measure/Measure/Length","path":"Measure/Length.html","kind":"struct","full_name":"Measure::Length","name":"Length","abstract":false,"superclass":{"html_id":"measure/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"measure/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"measure/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/length.cr","line_number":4,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L4"}],"repository_name":"measure","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"measure/Measure","kind":"module","full_name":"Measure","name":"Measure"},"constructors":[{"html_id":"new(magnitude:Float64,unit:Measure::Length::Unit)-class-method","name":"new","doc":"Instantiate a `Length` instance with the given `magnitude` and `Unit`.","summary":"<p>Instantiate a <code><a href=\"../Measure/Length.html\">Length</a></code> instance with the given <code><a href=\"../Measure/Length.html#magnitude%3AFloat64-instance-method\">#magnitude</a></code> and <code><a href=\"../Measure/Length/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"magnitude","external_name":"magnitude","restriction":"::Float64"},{"name":"unit","external_name":"unit","restriction":"::Measure::Length::Unit"}],"args_string":"(magnitude : Float64, unit : Measure::Length::Unit)","args_html":"(magnitude : Float64, unit : <a href=\"../Measure/Length/Unit.html\">Measure::Length::Unit</a>)","location":{"filename":"src/length.cr","line_number":15,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L15"},"def":{"name":"new","args":[{"name":"magnitude","external_name":"magnitude","restriction":"::Float64"},{"name":"unit","external_name":"unit","restriction":"::Measure::Length::Unit"}],"visibility":"Public","body":"_ = allocate\n_.initialize(magnitude, unit)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/length.cr","line_number":6,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"*(scalar:Number):self-instance-method","name":"*","doc":"Multiply by a scalar value\n\n```\n2.miles * 5\n# => Measure::Length(@magnitude=10.0, @unit=Measure::Length::Unit::Mile)\n```","summary":"<p>Multiply by a scalar value</p>","abstract":false,"args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"args_string":"(scalar : Number) : self","args_html":"(scalar : <a href=\"../Number.html\">Number</a>) : <span class=\"k\">self</span>","location":{"filename":"src/length.cr","line_number":68,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L68"},"def":{"name":"*","args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude * scalar, unit)"}},{"html_id":"+(other:self):self-instance-method","name":"+","doc":"Add two `Length`s of any units together, returning an instance using\n`self`'s `Unit`.\n\n```\n1.kilometer + 1.mile\n# => Measure::Length(@magnitude=2.6093439485009937, @unit=Measure::Length::Unit::Kilometer)\n```","summary":"<p>Add two <code><a href=\"../Measure/Length.html\">Length</a></code>s of any units together, returning an instance using <code>self</code>'s <code><a href=\"../Measure/Length/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/length.cr","line_number":47,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L47"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude + (other.to(unit)).magnitude, unit)"}},{"html_id":"-(other:self):self-instance-method","name":"-","doc":"Subtract a `Length` from `self`, returning an instance using `self`'s\n`Unit`.\n\n```\n1.mile - 1.kilometer\n# => Measure::Length(@magnitude=0.37862878787878795, @unit=Measure::Length::Unit::Mile)\n```","summary":"<p>Subtract a <code><a href=\"../Measure/Length.html\">Length</a></code> from <code>self</code>, returning an instance using <code>self</code>'s <code><a href=\"../Measure/Length/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/length.cr","line_number":58,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L58"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude - (other.to(unit)).magnitude, unit)"}},{"html_id":"/(scalar:Number):self-instance-method","name":"/","doc":"Multiply by a scalar value\n\n```\n10.miles / 2\n# => Measure::Length(@magnitude=5.0, @unit=Measure::Length::Unit::Mile)\n```","summary":"<p>Multiply by a scalar value</p>","abstract":false,"args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"args_string":"(scalar : Number) : self","args_html":"(scalar : <a href=\"../Number.html\">Number</a>) : <span class=\"k\">self</span>","location":{"filename":"src/length.cr","line_number":78,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L78"},"def":{"name":"/","args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"return_type":"self","visibility":"Public","body":"if scalar == 0\n  raise(DivisionByZeroError.new)\nend\nself.class.new(magnitude / scalar, unit)\n"}},{"html_id":"<=>(other:self)-instance-method","name":"<=>","doc":"Returns `-1` if `self` is less than `other`, `0` if they're equal, or `-1`\notherwise.\n\n```\n1.mile <=> 1.kilometer # => 1\n1.mile <=> 1.mile      # => 0\n1.kilometer <=> 1.mile # => -1\n1.kilometer < 1.mile   # => true\n1.kilometer > 1.mile   # => false\n```","summary":"<p>Returns <code>-1</code> if <code>self</code> is less than <code>other</code>, <code>0</code> if they're equal, or <code>-1</code> otherwise.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/length.cr","line_number":93,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L93"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"total_meters <=> other.total_meters"}},{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if `self` and `other` are close enough to each other to be\nconsidered equivalent — within a femtometer (1/1_000_000_000_000_000th of\na meter). This isn't _technically_ correct, but if you need that level of\nprecision, [open an issue](https://github.com/jgaskins/measure/issues/new)\nand we can discuss how to support it.","summary":"<p>Returns <code>true</code> if <code>self</code> and <code>other</code> are close enough to each other to be considered equivalent — within a femtometer (1/1_000_000_000_000_000th of a meter).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/length.cr","line_number":102,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L102"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"(total_meters - other.total_meters).abs < 1e-15"}},{"html_id":"magnitude:Float64-instance-method","name":"magnitude","doc":"The numeric part of the measurement — the `1` in `1.meter`.","summary":"<p>The numeric part of the measurement — the <code>1</code> in <code>1.meter</code>.</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":9,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L9"},"def":{"name":"magnitude","return_type":"Float64","visibility":"Public","body":"@magnitude"}},{"html_id":"to(unit:Unit):self-instance-method","name":"to","doc":"Convert this instance to the given `Unit`.\n\n```\n1.mile.to(:feet)\n# => Measure::Length(@magnitude=5280.0, @unit=Measure::Length::Unit::Foot)\n```","summary":"<p>Convert this instance to the given <code><a href=\"../Measure/Length/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"unit","external_name":"unit","restriction":"Unit"}],"args_string":"(unit : Unit) : self","args_html":"(unit : <a href=\"../Measure/Length/Unit.html\">Unit</a>) : <span class=\"k\">self</span>","location":{"filename":"src/length.cr","line_number":35,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L35"},"def":{"name":"to","args":[{"name":"unit","external_name":"unit","restriction":"Unit"}],"return_type":"self","visibility":"Public","body":"coefficient = (coefficient(unit)) / (coefficient(self.unit))\nself.class.new(coefficient * magnitude, unit)\n"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Output a human-readable representation of this `Length` to the given `IO`.","summary":"<p>Output a human-readable representation of this <code><a href=\"../Measure/Length.html\">Length</a></code> to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/length.cr","line_number":24,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L24"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"(io << magnitude) << ' '\nunit.to_s.downcase(io)\n"}},{"html_id":"total_meters:Float64-instance-method","name":"total_meters","doc":"Returns the number of meters represented by this `Length` instance","summary":"<p>Returns the number of meters represented by this <code><a href=\"../Measure/Length.html\">Length</a></code> instance</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":19,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L19"},"def":{"name":"total_meters","return_type":"Float64","visibility":"Public","body":"magnitude / coefficient"}},{"html_id":"unit:Unit-instance-method","name":"unit","doc":"The unit used in measuring the length.","summary":"<p>The unit used in measuring the length.</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":12,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L12"},"def":{"name":"unit","return_type":"Unit","visibility":"Public","body":"@unit"}}],"types":[{"html_id":"measure/Measure/Length/Unit","path":"Measure/Length/Unit.html","kind":"enum","full_name":"Measure::Length::Unit","name":"Unit","abstract":false,"ancestors":[{"html_id":"measure/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"measure/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/length.cr","line_number":137,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L137"}],"repository_name":"measure","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Kilometer","name":"Kilometer","value":"0"},{"id":"Kilometers","name":"Kilometers","value":"0"},{"id":"KM","name":"KM","value":"0"},{"id":"Meter","name":"Meter","value":"1"},{"id":"Meters","name":"Meters","value":"1"},{"id":"Centimeter","name":"Centimeter","value":"2"},{"id":"Centimeters","name":"Centimeters","value":"2"},{"id":"CM","name":"CM","value":"2"},{"id":"Millimeter","name":"Millimeter","value":"3"},{"id":"Millimeters","name":"Millimeters","value":"3"},{"id":"MM","name":"MM","value":"3"},{"id":"Micrometer","name":"Micrometer","value":"4"},{"id":"Micrometers","name":"Micrometers","value":"4"},{"id":"Micron","name":"Micron","value":"4"},{"id":"Microns","name":"Microns","value":"4"},{"id":"Nanometer","name":"Nanometer","value":"5"},{"id":"Nanometers","name":"Nanometers","value":"5"},{"id":"NM","name":"NM","value":"5"},{"id":"Foot","name":"Foot","value":"6"},{"id":"Feet","name":"Feet","value":"6"},{"id":"Ft","name":"Ft","value":"6"},{"id":"Yard","name":"Yard","value":"7"},{"id":"Yards","name":"Yards","value":"7"},{"id":"Yd","name":"Yd","value":"7"},{"id":"Yds","name":"Yds","value":"7"},{"id":"Inch","name":"Inch","value":"8"},{"id":"Inches","name":"Inches","value":"8"},{"id":"In","name":"In","value":"8"},{"id":"Mile","name":"Mile","value":"9"},{"id":"Miles","name":"Miles","value":"9"},{"id":"Mi","name":"Mi","value":"9"}],"namespace":{"html_id":"measure/Measure/Length","kind":"struct","full_name":"Measure::Length","name":"Length"},"doc":"The units available to `Length` instances. Note that there are multiple\naliases of each one. This allows you to say `length.to(:meters)` or\n`length.to(:km)`.","summary":"<p>The units available to <code><a href=\"../../Measure/Length.html\">Length</a></code> instances.</p>","instance_methods":[{"html_id":"centimeter?-instance-method","name":"centimeter?","abstract":false,"location":{"filename":"src/length.cr","line_number":145,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L145"},"def":{"name":"centimeter?","visibility":"Public","body":"self == Centimeter"}},{"html_id":"centimeters?-instance-method","name":"centimeters?","abstract":false,"location":{"filename":"src/length.cr","line_number":146,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L146"},"def":{"name":"centimeters?","visibility":"Public","body":"self == Centimeters"}},{"html_id":"cm?-instance-method","name":"cm?","abstract":false,"location":{"filename":"src/length.cr","line_number":147,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L147"},"def":{"name":"cm?","visibility":"Public","body":"self == CM"}},{"html_id":"feet?-instance-method","name":"feet?","abstract":false,"location":{"filename":"src/length.cr","line_number":163,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L163"},"def":{"name":"feet?","visibility":"Public","body":"self == Feet"}},{"html_id":"foot?-instance-method","name":"foot?","abstract":false,"location":{"filename":"src/length.cr","line_number":162,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L162"},"def":{"name":"foot?","visibility":"Public","body":"self == Foot"}},{"html_id":"ft?-instance-method","name":"ft?","abstract":false,"location":{"filename":"src/length.cr","line_number":164,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L164"},"def":{"name":"ft?","visibility":"Public","body":"self == Ft"}},{"html_id":"in?-instance-method","name":"in?","abstract":false,"location":{"filename":"src/length.cr","line_number":173,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L173"},"def":{"name":"in?","visibility":"Public","body":"self == In"}},{"html_id":"inch?-instance-method","name":"inch?","abstract":false,"location":{"filename":"src/length.cr","line_number":171,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L171"},"def":{"name":"inch?","visibility":"Public","body":"self == Inch"}},{"html_id":"inches?-instance-method","name":"inches?","abstract":false,"location":{"filename":"src/length.cr","line_number":172,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L172"},"def":{"name":"inches?","visibility":"Public","body":"self == Inches"}},{"html_id":"kilometer?-instance-method","name":"kilometer?","abstract":false,"location":{"filename":"src/length.cr","line_number":138,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L138"},"def":{"name":"kilometer?","visibility":"Public","body":"self == Kilometer"}},{"html_id":"kilometers?-instance-method","name":"kilometers?","abstract":false,"location":{"filename":"src/length.cr","line_number":139,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L139"},"def":{"name":"kilometers?","visibility":"Public","body":"self == Kilometers"}},{"html_id":"km?-instance-method","name":"km?","abstract":false,"location":{"filename":"src/length.cr","line_number":140,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L140"},"def":{"name":"km?","visibility":"Public","body":"self == KM"}},{"html_id":"meter?-instance-method","name":"meter?","abstract":false,"location":{"filename":"src/length.cr","line_number":142,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L142"},"def":{"name":"meter?","visibility":"Public","body":"self == Meter"}},{"html_id":"meters?-instance-method","name":"meters?","abstract":false,"location":{"filename":"src/length.cr","line_number":143,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L143"},"def":{"name":"meters?","visibility":"Public","body":"self == Meters"}},{"html_id":"mi?-instance-method","name":"mi?","abstract":false,"location":{"filename":"src/length.cr","line_number":177,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L177"},"def":{"name":"mi?","visibility":"Public","body":"self == Mi"}},{"html_id":"micrometer?-instance-method","name":"micrometer?","abstract":false,"location":{"filename":"src/length.cr","line_number":153,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L153"},"def":{"name":"micrometer?","visibility":"Public","body":"self == Micrometer"}},{"html_id":"micrometers?-instance-method","name":"micrometers?","abstract":false,"location":{"filename":"src/length.cr","line_number":154,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L154"},"def":{"name":"micrometers?","visibility":"Public","body":"self == Micrometers"}},{"html_id":"micron?-instance-method","name":"micron?","abstract":false,"location":{"filename":"src/length.cr","line_number":155,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L155"},"def":{"name":"micron?","visibility":"Public","body":"self == Micron"}},{"html_id":"microns?-instance-method","name":"microns?","abstract":false,"location":{"filename":"src/length.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L156"},"def":{"name":"microns?","visibility":"Public","body":"self == Microns"}},{"html_id":"mile?-instance-method","name":"mile?","abstract":false,"location":{"filename":"src/length.cr","line_number":175,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L175"},"def":{"name":"mile?","visibility":"Public","body":"self == Mile"}},{"html_id":"miles?-instance-method","name":"miles?","abstract":false,"location":{"filename":"src/length.cr","line_number":176,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L176"},"def":{"name":"miles?","visibility":"Public","body":"self == Miles"}},{"html_id":"millimeter?-instance-method","name":"millimeter?","abstract":false,"location":{"filename":"src/length.cr","line_number":149,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L149"},"def":{"name":"millimeter?","visibility":"Public","body":"self == Millimeter"}},{"html_id":"millimeters?-instance-method","name":"millimeters?","abstract":false,"location":{"filename":"src/length.cr","line_number":150,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L150"},"def":{"name":"millimeters?","visibility":"Public","body":"self == Millimeters"}},{"html_id":"mm?-instance-method","name":"mm?","abstract":false,"location":{"filename":"src/length.cr","line_number":151,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L151"},"def":{"name":"mm?","visibility":"Public","body":"self == MM"}},{"html_id":"nanometer?-instance-method","name":"nanometer?","abstract":false,"location":{"filename":"src/length.cr","line_number":158,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L158"},"def":{"name":"nanometer?","visibility":"Public","body":"self == Nanometer"}},{"html_id":"nanometers?-instance-method","name":"nanometers?","abstract":false,"location":{"filename":"src/length.cr","line_number":159,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L159"},"def":{"name":"nanometers?","visibility":"Public","body":"self == Nanometers"}},{"html_id":"nm?-instance-method","name":"nm?","abstract":false,"location":{"filename":"src/length.cr","line_number":160,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L160"},"def":{"name":"nm?","visibility":"Public","body":"self == NM"}},{"html_id":"yard?-instance-method","name":"yard?","abstract":false,"location":{"filename":"src/length.cr","line_number":166,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L166"},"def":{"name":"yard?","visibility":"Public","body":"self == Yard"}},{"html_id":"yards?-instance-method","name":"yards?","abstract":false,"location":{"filename":"src/length.cr","line_number":167,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L167"},"def":{"name":"yards?","visibility":"Public","body":"self == Yards"}},{"html_id":"yd?-instance-method","name":"yd?","abstract":false,"location":{"filename":"src/length.cr","line_number":168,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L168"},"def":{"name":"yd?","visibility":"Public","body":"self == Yd"}},{"html_id":"yds?-instance-method","name":"yds?","abstract":false,"location":{"filename":"src/length.cr","line_number":169,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L169"},"def":{"name":"yds?","visibility":"Public","body":"self == Yds"}}]}]},{"html_id":"measure/Measure/Weight","path":"Measure/Weight.html","kind":"struct","full_name":"Measure::Weight","name":"Weight","abstract":false,"superclass":{"html_id":"measure/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"measure/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/weight.cr","line_number":2,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L2"}],"repository_name":"measure","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"namespace":{"html_id":"measure/Measure","kind":"module","full_name":"Measure","name":"Measure"},"constructors":[{"html_id":"new(magnitude:Float64,unit:Measure::Weight::Unit)-class-method","name":"new","doc":"Instantiate a `Weight` instance with the given `magnitude` and `Unit`.","summary":"<p>Instantiate a <code><a href=\"../Measure/Weight.html\">Weight</a></code> instance with the given <code><a href=\"../Measure/Weight.html#magnitude%3AFloat64-instance-method\">#magnitude</a></code> and <code><a href=\"../Measure/Weight/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"magnitude","external_name":"magnitude","restriction":"::Float64"},{"name":"unit","external_name":"unit","restriction":"::Measure::Weight::Unit"}],"args_string":"(magnitude : Float64, unit : Measure::Weight::Unit)","args_html":"(magnitude : Float64, unit : <a href=\"../Measure/Weight/Unit.html\">Measure::Weight::Unit</a>)","location":{"filename":"src/weight.cr","line_number":12,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L12"},"def":{"name":"new","args":[{"name":"magnitude","external_name":"magnitude","restriction":"::Float64"},{"name":"unit","external_name":"unit","restriction":"::Measure::Weight::Unit"}],"visibility":"Public","body":"_ = allocate\n_.initialize(magnitude, unit)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"*(scalar:Number):self-instance-method","name":"*","doc":"Multiply by a scalar value\n\n```\n2.kg * 5\n# => Measure::Length(@magnitude=10.0, @unit=Measure::Length::Unit::Kilogram)\n```","summary":"<p>Multiply by a scalar value</p>","abstract":false,"args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"args_string":"(scalar : Number) : self","args_html":"(scalar : <a href=\"../Number.html\">Number</a>) : <span class=\"k\">self</span>","location":{"filename":"src/weight.cr","line_number":65,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L65"},"def":{"name":"*","args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude * scalar, unit)"}},{"html_id":"+(other:self):self-instance-method","name":"+","doc":"Add two `Weight`s of any units together, returning an instance using\n`self`'s `Unit`.\n\n```\n1.kilogram + 1.pound\n# => Measure::Weight(@magnitude=1.4535929094356397, @unit=Measure::Weight::Unit::Kilogram)\n```","summary":"<p>Add two <code><a href=\"../Measure/Weight.html\">Weight</a></code>s of any units together, returning an instance using <code>self</code>'s <code><a href=\"../Measure/Weight/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/weight.cr","line_number":44,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L44"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude + (other.to(unit)).magnitude, unit)"}},{"html_id":"-(other:self):self-instance-method","name":"-","doc":"Subtract a `Length` from `self`, returning an instance using `self`'s\n`Unit`.\n\n```\n1.kilogram - 1.pound\n# => Measure::Weight(@magnitude=0.5464070905643603, @unit=Measure::Weight::Unit::Kilogram)\n```","summary":"<p>Subtract a <code><a href=\"../Measure/Length.html\">Length</a></code> from <code>self</code>, returning an instance using <code>self</code>'s <code><a href=\"../Measure/Weight/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/weight.cr","line_number":55,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L55"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"self.class.new(magnitude - (other.to(unit)).magnitude, unit)"}},{"html_id":"/(scalar:Number):self-instance-method","name":"/","doc":"Multiply by a scalar value\n\n```\n10.kg / 2\n# => Measure::Length(@magnitude=2.0, @unit=Measure::Length::Unit::Kilogram)\n```","summary":"<p>Multiply by a scalar value</p>","abstract":false,"args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"args_string":"(scalar : Number) : self","args_html":"(scalar : <a href=\"../Number.html\">Number</a>) : <span class=\"k\">self</span>","location":{"filename":"src/weight.cr","line_number":75,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L75"},"def":{"name":"/","args":[{"name":"scalar","external_name":"scalar","restriction":"Number"}],"return_type":"self","visibility":"Public","body":"if scalar == 0\n  raise(DivisionByZeroError.new)\nend\nself.class.new(magnitude / scalar, unit)\n"}},{"html_id":"<=>(other:self)-instance-method","name":"<=>","doc":"Returns `-1` if `self` is less than `other`, `0` if they're equal, or `-1`\notherwise.\n\n```\n1.kg <=> 1.lb # => 1\n1.lb <=> 1.lb # => 0\n1.lb <=> 1.kg # => -1\n1.lb < 1.kg   # => true\n1.lb > 1.kg   # => false\n```","summary":"<p>Returns <code>-1</code> if <code>self</code> is less than <code>other</code>, <code>0</code> if they're equal, or <code>-1</code> otherwise.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/weight.cr","line_number":90,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L90"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"total_grams <=> other.total_grams"}},{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if `self` and `other` are close enough to each other to be\nconsidered equivalent — within a femtogram (1/1_000_000_000_000_000th of\na gram). This isn't _technically_ correct, but if you need that level of\nprecision, [open an issue](https://github.com/jgaskins/measure/issues/new)\nand we can discuss how to support it.","summary":"<p>Returns <code>true</code> if <code>self</code> and <code>other</code> are close enough to each other to be considered equivalent — within a femtogram (1/1_000_000_000_000_000th of a gram).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/weight.cr","line_number":99,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L99"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"(total_grams - other.total_grams).abs < 1e-15"}},{"html_id":"magnitude:Float64-instance-method","name":"magnitude","doc":"The numeric part of the measurement — the `1` in `1.kilogram`.","summary":"<p>The numeric part of the measurement — the <code>1</code> in <code>1.kilogram</code>.</p>","abstract":false,"location":{"filename":"src/weight.cr","line_number":6,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L6"},"def":{"name":"magnitude","return_type":"Float64","visibility":"Public","body":"@magnitude"}},{"html_id":"to(unit:Unit):self-instance-method","name":"to","doc":"Convert this instance to the given `Unit`.\n\n```\n1.kilogram.to(:lbs)\n# => Measure::Weight(@magnitude=2.20462, @unit=Measure::Weight::Unit::Pound)\n```","summary":"<p>Convert this instance to the given <code><a href=\"../Measure/Weight/Unit.html\">Unit</a></code>.</p>","abstract":false,"args":[{"name":"unit","external_name":"unit","restriction":"Unit"}],"args_string":"(unit : Unit) : self","args_html":"(unit : <a href=\"../Measure/Weight/Unit.html\">Unit</a>) : <span class=\"k\">self</span>","location":{"filename":"src/weight.cr","line_number":32,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L32"},"def":{"name":"to","args":[{"name":"unit","external_name":"unit","restriction":"Unit"}],"return_type":"self","visibility":"Public","body":"coefficient = (coefficient(unit)) / (coefficient(self.unit))\nself.class.new(coefficient * magnitude, unit)\n"}},{"html_id":"to_s(io):Nil-instance-method","name":"to_s","doc":"Output a human-readable representation of this `Weight` to the given `IO`.","summary":"<p>Output a human-readable representation of this <code><a href=\"../Measure/Weight.html\">Weight</a></code> to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io) : Nil","args_html":"(io) : Nil","location":{"filename":"src/weight.cr","line_number":21,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L21"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"return_type":"Nil","visibility":"Public","body":"(io << magnitude) << ' '\nunit.to_s.downcase(io)\n"}},{"html_id":"total_grams-instance-method","name":"total_grams","doc":"Returns the number of grams represented by this `Weight` instance","summary":"<p>Returns the number of grams represented by this <code><a href=\"../Measure/Weight.html\">Weight</a></code> instance</p>","abstract":false,"location":{"filename":"src/weight.cr","line_number":16,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L16"},"def":{"name":"total_grams","visibility":"Public","body":"magnitude / coefficient"}},{"html_id":"unit:Unit-instance-method","name":"unit","doc":"The unit used in measuring the weight.","summary":"<p>The unit used in measuring the weight.</p>","abstract":false,"location":{"filename":"src/weight.cr","line_number":9,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L9"},"def":{"name":"unit","return_type":"Unit","visibility":"Public","body":"@unit"}}],"types":[{"html_id":"measure/Measure/Weight/Unit","path":"Measure/Weight/Unit.html","kind":"enum","full_name":"Measure::Weight::Unit","name":"Unit","abstract":false,"ancestors":[{"html_id":"measure/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"measure/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/weight.cr","line_number":126,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L126"}],"repository_name":"measure","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Gram","name":"Gram","value":"0"},{"id":"Grams","name":"Grams","value":"0"},{"id":"G","name":"G","value":"0"},{"id":"Kilogram","name":"Kilogram","value":"1"},{"id":"Kilograms","name":"Kilograms","value":"1"},{"id":"KG","name":"KG","value":"1"},{"id":"Milligram","name":"Milligram","value":"2"},{"id":"Milligrams","name":"Milligrams","value":"2"},{"id":"MG","name":"MG","value":"2"},{"id":"Pound","name":"Pound","value":"3"},{"id":"Pounds","name":"Pounds","value":"3"},{"id":"LB","name":"LB","value":"3"},{"id":"LBS","name":"LBS","value":"3"},{"id":"Ounce","name":"Ounce","value":"4"},{"id":"Ounces","name":"Ounces","value":"4"},{"id":"OZ","name":"OZ","value":"4"},{"id":"Ton","name":"Ton","value":"5"},{"id":"Tons","name":"Tons","value":"5"},{"id":"T","name":"T","value":"5"}],"namespace":{"html_id":"measure/Measure/Weight","kind":"struct","full_name":"Measure::Weight","name":"Weight"},"doc":"The units available to `Weight` instances. Note that there are multiple\naliases of each one. This allows you to say `weight.to(:pounds)` or\n`weight.to(:kilograms)`.","summary":"<p>The units available to <code><a href=\"../../Measure/Weight.html\">Weight</a></code> instances.</p>","instance_methods":[{"html_id":"g?-instance-method","name":"g?","abstract":false,"location":{"filename":"src/weight.cr","line_number":129,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L129"},"def":{"name":"g?","visibility":"Public","body":"self == G"}},{"html_id":"gram?-instance-method","name":"gram?","abstract":false,"location":{"filename":"src/weight.cr","line_number":127,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L127"},"def":{"name":"gram?","visibility":"Public","body":"self == Gram"}},{"html_id":"grams?-instance-method","name":"grams?","abstract":false,"location":{"filename":"src/weight.cr","line_number":128,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L128"},"def":{"name":"grams?","visibility":"Public","body":"self == Grams"}},{"html_id":"kg?-instance-method","name":"kg?","abstract":false,"location":{"filename":"src/weight.cr","line_number":133,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L133"},"def":{"name":"kg?","visibility":"Public","body":"self == KG"}},{"html_id":"kilogram?-instance-method","name":"kilogram?","abstract":false,"location":{"filename":"src/weight.cr","line_number":131,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L131"},"def":{"name":"kilogram?","visibility":"Public","body":"self == Kilogram"}},{"html_id":"kilograms?-instance-method","name":"kilograms?","abstract":false,"location":{"filename":"src/weight.cr","line_number":132,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L132"},"def":{"name":"kilograms?","visibility":"Public","body":"self == Kilograms"}},{"html_id":"lb?-instance-method","name":"lb?","abstract":false,"location":{"filename":"src/weight.cr","line_number":141,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L141"},"def":{"name":"lb?","visibility":"Public","body":"self == LB"}},{"html_id":"lbs?-instance-method","name":"lbs?","abstract":false,"location":{"filename":"src/weight.cr","line_number":142,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L142"},"def":{"name":"lbs?","visibility":"Public","body":"self == LBS"}},{"html_id":"mg?-instance-method","name":"mg?","abstract":false,"location":{"filename":"src/weight.cr","line_number":137,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L137"},"def":{"name":"mg?","visibility":"Public","body":"self == MG"}},{"html_id":"milligram?-instance-method","name":"milligram?","abstract":false,"location":{"filename":"src/weight.cr","line_number":135,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L135"},"def":{"name":"milligram?","visibility":"Public","body":"self == Milligram"}},{"html_id":"milligrams?-instance-method","name":"milligrams?","abstract":false,"location":{"filename":"src/weight.cr","line_number":136,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L136"},"def":{"name":"milligrams?","visibility":"Public","body":"self == Milligrams"}},{"html_id":"ounce?-instance-method","name":"ounce?","abstract":false,"location":{"filename":"src/weight.cr","line_number":144,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L144"},"def":{"name":"ounce?","visibility":"Public","body":"self == Ounce"}},{"html_id":"ounces?-instance-method","name":"ounces?","abstract":false,"location":{"filename":"src/weight.cr","line_number":145,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L145"},"def":{"name":"ounces?","visibility":"Public","body":"self == Ounces"}},{"html_id":"oz?-instance-method","name":"oz?","abstract":false,"location":{"filename":"src/weight.cr","line_number":146,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L146"},"def":{"name":"oz?","visibility":"Public","body":"self == OZ"}},{"html_id":"pound?-instance-method","name":"pound?","abstract":false,"location":{"filename":"src/weight.cr","line_number":139,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L139"},"def":{"name":"pound?","visibility":"Public","body":"self == Pound"}},{"html_id":"pounds?-instance-method","name":"pounds?","abstract":false,"location":{"filename":"src/weight.cr","line_number":140,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L140"},"def":{"name":"pounds?","visibility":"Public","body":"self == Pounds"}},{"html_id":"t?-instance-method","name":"t?","abstract":false,"location":{"filename":"src/weight.cr","line_number":150,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L150"},"def":{"name":"t?","visibility":"Public","body":"self == T"}},{"html_id":"ton?-instance-method","name":"ton?","abstract":false,"location":{"filename":"src/weight.cr","line_number":148,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L148"},"def":{"name":"ton?","visibility":"Public","body":"self == Ton"}},{"html_id":"tons?-instance-method","name":"tons?","abstract":false,"location":{"filename":"src/weight.cr","line_number":149,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L149"},"def":{"name":"tons?","visibility":"Public","body":"self == Tons"}}]}]}]},{"html_id":"measure/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"measure/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"measure/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/length.cr","line_number":182,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L182"},{"filename":"src/weight.cr","line_number":155,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L155"}],"repository_name":"measure","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"measure/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"measure/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"The top-level number type.","summary":"<p>The top-level number type.</p>","instance_methods":[{"html_id":"centimeter-instance-method","name":"centimeter","doc":"Instantiate a `Measure::Length` of `self` centimeter\n\n```\n1.centimeter\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Centimeter)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> centimeter</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"centimeter","visibility":"Public","body":"Measure::Length.new(to_f64, :centimeter)"}},{"html_id":"centimeters-instance-method","name":"centimeters","doc":"Instantiate a `Measure::Length` of `self` centimeters\n\n```\n1.centimeters\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Centimeters)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> centimeters</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"centimeters","visibility":"Public","body":"Measure::Length.new(to_f64, :centimeters)"}},{"html_id":"cm-instance-method","name":"cm","doc":"Instantiate a `Measure::Length` of `self` cm\n\n```\n1.cm\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::CM)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> cm</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"cm","visibility":"Public","body":"Measure::Length.new(to_f64, :cm)"}},{"html_id":"feet-instance-method","name":"feet","doc":"Instantiate a `Measure::Length` of `self` feet\n\n```\n1.feet\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Feet)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> feet</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"feet","visibility":"Public","body":"Measure::Length.new(to_f64, :feet)"}},{"html_id":"foot-instance-method","name":"foot","doc":"Instantiate a `Measure::Length` of `self` foot\n\n```\n1.foot\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Foot)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> foot</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"foot","visibility":"Public","body":"Measure::Length.new(to_f64, :foot)"}},{"html_id":"ft-instance-method","name":"ft","doc":"Instantiate a `Measure::Length` of `self` ft\n\n```\n1.ft\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Ft)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> ft</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"ft","visibility":"Public","body":"Measure::Length.new(to_f64, :ft)"}},{"html_id":"g-instance-method","name":"g","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"g","visibility":"Public","body":"Measure::Weight.new(to_f64, :g)"}},{"html_id":"gram-instance-method","name":"gram","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"gram","visibility":"Public","body":"Measure::Weight.new(to_f64, :gram)"}},{"html_id":"grams-instance-method","name":"grams","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"grams","visibility":"Public","body":"Measure::Weight.new(to_f64, :grams)"}},{"html_id":"in-instance-method","name":"in","doc":"Instantiate a `Measure::Length` of `self` in\n\n```\n1.in\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::In)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> in</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"in","visibility":"Public","body":"Measure::Length.new(to_f64, :in)"}},{"html_id":"inch-instance-method","name":"inch","doc":"Instantiate a `Measure::Length` of `self` inch\n\n```\n1.inch\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Inch)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> inch</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"inch","visibility":"Public","body":"Measure::Length.new(to_f64, :inch)"}},{"html_id":"inches-instance-method","name":"inches","doc":"Instantiate a `Measure::Length` of `self` inches\n\n```\n1.inches\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Inches)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> inches</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"inches","visibility":"Public","body":"Measure::Length.new(to_f64, :inches)"}},{"html_id":"kg-instance-method","name":"kg","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"kg","visibility":"Public","body":"Measure::Weight.new(to_f64, :kg)"}},{"html_id":"kilogram-instance-method","name":"kilogram","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"kilogram","visibility":"Public","body":"Measure::Weight.new(to_f64, :kilogram)"}},{"html_id":"kilograms-instance-method","name":"kilograms","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"kilograms","visibility":"Public","body":"Measure::Weight.new(to_f64, :kilograms)"}},{"html_id":"kilometer-instance-method","name":"kilometer","doc":"Instantiate a `Measure::Length` of `self` kilometer\n\n```\n1.kilometer\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Kilometer)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> kilometer</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"kilometer","visibility":"Public","body":"Measure::Length.new(to_f64, :kilometer)"}},{"html_id":"kilometers-instance-method","name":"kilometers","doc":"Instantiate a `Measure::Length` of `self` kilometers\n\n```\n1.kilometers\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Kilometers)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> kilometers</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"kilometers","visibility":"Public","body":"Measure::Length.new(to_f64, :kilometers)"}},{"html_id":"km-instance-method","name":"km","doc":"Instantiate a `Measure::Length` of `self` km\n\n```\n1.km\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::KM)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> km</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"km","visibility":"Public","body":"Measure::Length.new(to_f64, :km)"}},{"html_id":"lb-instance-method","name":"lb","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"lb","visibility":"Public","body":"Measure::Weight.new(to_f64, :lb)"}},{"html_id":"lbs-instance-method","name":"lbs","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"lbs","visibility":"Public","body":"Measure::Weight.new(to_f64, :lbs)"}},{"html_id":"meter-instance-method","name":"meter","doc":"Instantiate a `Measure::Length` of `self` meter\n\n```\n1.meter\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Meter)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> meter</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"meter","visibility":"Public","body":"Measure::Length.new(to_f64, :meter)"}},{"html_id":"meters-instance-method","name":"meters","doc":"Instantiate a `Measure::Length` of `self` meters\n\n```\n1.meters\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Meters)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> meters</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"meters","visibility":"Public","body":"Measure::Length.new(to_f64, :meters)"}},{"html_id":"mg-instance-method","name":"mg","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"mg","visibility":"Public","body":"Measure::Weight.new(to_f64, :mg)"}},{"html_id":"mi-instance-method","name":"mi","doc":"Instantiate a `Measure::Length` of `self` mi\n\n```\n1.mi\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Mi)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> mi</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"mi","visibility":"Public","body":"Measure::Length.new(to_f64, :mi)"}},{"html_id":"micrometer-instance-method","name":"micrometer","doc":"Instantiate a `Measure::Length` of `self` micrometer\n\n```\n1.micrometer\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Micrometer)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> micrometer</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"micrometer","visibility":"Public","body":"Measure::Length.new(to_f64, :micrometer)"}},{"html_id":"micrometers-instance-method","name":"micrometers","doc":"Instantiate a `Measure::Length` of `self` micrometers\n\n```\n1.micrometers\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Micrometers)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> micrometers</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"micrometers","visibility":"Public","body":"Measure::Length.new(to_f64, :micrometers)"}},{"html_id":"micron-instance-method","name":"micron","doc":"Instantiate a `Measure::Length` of `self` micron\n\n```\n1.micron\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Micron)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> micron</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"micron","visibility":"Public","body":"Measure::Length.new(to_f64, :micron)"}},{"html_id":"microns-instance-method","name":"microns","doc":"Instantiate a `Measure::Length` of `self` microns\n\n```\n1.microns\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Microns)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> microns</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"microns","visibility":"Public","body":"Measure::Length.new(to_f64, :microns)"}},{"html_id":"mile-instance-method","name":"mile","doc":"Instantiate a `Measure::Length` of `self` mile\n\n```\n1.mile\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Mile)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> mile</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"mile","visibility":"Public","body":"Measure::Length.new(to_f64, :mile)"}},{"html_id":"miles-instance-method","name":"miles","doc":"Instantiate a `Measure::Length` of `self` miles\n\n```\n1.miles\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Miles)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> miles</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"miles","visibility":"Public","body":"Measure::Length.new(to_f64, :miles)"}},{"html_id":"milligram-instance-method","name":"milligram","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"milligram","visibility":"Public","body":"Measure::Weight.new(to_f64, :milligram)"}},{"html_id":"milligrams-instance-method","name":"milligrams","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"milligrams","visibility":"Public","body":"Measure::Weight.new(to_f64, :milligrams)"}},{"html_id":"millimeter-instance-method","name":"millimeter","doc":"Instantiate a `Measure::Length` of `self` millimeter\n\n```\n1.millimeter\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Millimeter)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> millimeter</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"millimeter","visibility":"Public","body":"Measure::Length.new(to_f64, :millimeter)"}},{"html_id":"millimeters-instance-method","name":"millimeters","doc":"Instantiate a `Measure::Length` of `self` millimeters\n\n```\n1.millimeters\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Millimeters)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> millimeters</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"millimeters","visibility":"Public","body":"Measure::Length.new(to_f64, :millimeters)"}},{"html_id":"mm-instance-method","name":"mm","doc":"Instantiate a `Measure::Length` of `self` mm\n\n```\n1.mm\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::MM)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> mm</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"mm","visibility":"Public","body":"Measure::Length.new(to_f64, :mm)"}},{"html_id":"nanometer-instance-method","name":"nanometer","doc":"Instantiate a `Measure::Length` of `self` nanometer\n\n```\n1.nanometer\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Nanometer)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> nanometer</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"nanometer","visibility":"Public","body":"Measure::Length.new(to_f64, :nanometer)"}},{"html_id":"nanometers-instance-method","name":"nanometers","doc":"Instantiate a `Measure::Length` of `self` nanometers\n\n```\n1.nanometers\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Nanometers)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> nanometers</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"nanometers","visibility":"Public","body":"Measure::Length.new(to_f64, :nanometers)"}},{"html_id":"nm-instance-method","name":"nm","doc":"Instantiate a `Measure::Length` of `self` nm\n\n```\n1.nm\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::NM)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> nm</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"nm","visibility":"Public","body":"Measure::Length.new(to_f64, :nm)"}},{"html_id":"ounce-instance-method","name":"ounce","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"ounce","visibility":"Public","body":"Measure::Weight.new(to_f64, :ounce)"}},{"html_id":"ounces-instance-method","name":"ounces","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"ounces","visibility":"Public","body":"Measure::Weight.new(to_f64, :ounces)"}},{"html_id":"oz-instance-method","name":"oz","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"oz","visibility":"Public","body":"Measure::Weight.new(to_f64, :oz)"}},{"html_id":"pound-instance-method","name":"pound","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"pound","visibility":"Public","body":"Measure::Weight.new(to_f64, :pound)"}},{"html_id":"pounds-instance-method","name":"pounds","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"pounds","visibility":"Public","body":"Measure::Weight.new(to_f64, :pounds)"}},{"html_id":"t-instance-method","name":"t","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"t","visibility":"Public","body":"Measure::Weight.new(to_f64, :t)"}},{"html_id":"ton-instance-method","name":"ton","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"ton","visibility":"Public","body":"Measure::Weight.new(to_f64, :ton)"}},{"html_id":"tons-instance-method","name":"tons","abstract":false,"location":{"filename":"src/weight.cr","line_number":156,"url":"https://github.com/jgaskins/measure/blob/main/src/weight.cr#L156"},"def":{"name":"tons","visibility":"Public","body":"Measure::Weight.new(to_f64, :tons)"}},{"html_id":"yard-instance-method","name":"yard","doc":"Instantiate a `Measure::Length` of `self` yard\n\n```\n1.yard\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Yard)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> yard</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"yard","visibility":"Public","body":"Measure::Length.new(to_f64, :yard)"}},{"html_id":"yards-instance-method","name":"yards","doc":"Instantiate a `Measure::Length` of `self` yards\n\n```\n1.yards\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Yards)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> yards</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"yards","visibility":"Public","body":"Measure::Length.new(to_f64, :yards)"}},{"html_id":"yd-instance-method","name":"yd","doc":"Instantiate a `Measure::Length` of `self` yd\n\n```\n1.yd\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Yd)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> yd</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"yd","visibility":"Public","body":"Measure::Length.new(to_f64, :yd)"}},{"html_id":"yds-instance-method","name":"yds","doc":"Instantiate a `Measure::Length` of `self` yds\n\n```\n1.yds\n# => Measure::Length(@magnitude=1.0, @unit=Measure::Length::Unit::Yds)\n```","summary":"<p>Instantiate a <code><a href=\"Measure/Length.html\">Measure::Length</a></code> of <code>self</code> yds</p>","abstract":false,"location":{"filename":"src/length.cr","line_number":183,"url":"https://github.com/jgaskins/measure/blob/main/src/length.cr#L183"},"def":{"name":"yds","visibility":"Public","body":"Measure::Length.new(to_f64, :yds)"}}]}]}})